<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.seed.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.seed.model.Student" >
    <constructor >
      <arg column="stu_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="stu_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="open_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="nickname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="gender" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="header" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="major_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="class_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="college_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="del" jdbcType="BIT" javaType="java.lang.Boolean" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stu_id, stu_name, password, open_id, nickname, gender, header, status, major_id, 
    class_id, college_id, create_time, update_time, del
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.seed.model.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_stu_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.seed.model.StudentExample" >
    delete from t_stu_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.seed.model.Student" >
    insert into t_stu_user (stu_id, stu_name, password, 
      open_id, nickname, gender, 
      header, status, major_id, 
      class_id, college_id, create_time, 
      update_time, del)
    values (#{stuId,jdbcType=VARCHAR}, #{stuName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{openId,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, 
      #{header,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{majorId,jdbcType=VARCHAR}, 
      #{classId,jdbcType=VARCHAR}, #{collegeId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{del,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.seed.model.Student" >
    insert into t_stu_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="stuName != null" >
        stu_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="header != null" >
        header,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="majorId != null" >
        major_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="del != null" >
        del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null" >
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=BIT},
      </if>
      <if test="header != null" >
        #{header,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="majorId != null" >
        #{majorId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="del != null" >
        #{del,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.seed.model.StudentExample" resultType="java.lang.Integer" >
    select count(*) from t_stu_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_stu_user
    <set >
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.stuName != null" >
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=BIT},
      </if>
      <if test="record.header != null" >
        header = #{record.header,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.majorId != null" >
        major_id = #{record.majorId,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeId != null" >
        college_id = #{record.collegeId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.del != null" >
        del = #{record.del,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_stu_user
    set stu_id = #{record.stuId,jdbcType=VARCHAR},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      open_id = #{record.openId,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=BIT},
      header = #{record.header,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      major_id = #{record.majorId,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      college_id = #{record.collegeId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del = #{record.del,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="selectStudentByOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select  stu_id, stu_name, password, open_id, nickname, gender, header, status, major_id,
    class_id, college_id, create_time, update_time, del
      from t_stu_user
      where open_id = #{openId,jdbcType=VARCHAR}
  </select>
</mapper>